[gd_scene load_steps=38 format=2]

[ext_resource path="res://Assets/Sprites/camelot_ v1.0/lancelot_.png" type="Texture" id=1]
[ext_resource path="res://Characters/Player.gd" type="Script" id=2]
[ext_resource path="res://Libs/ShardEmitter.tscn" type="PackedScene" id=3]
[ext_resource path="res://Weapons/Sword2.tscn" type="PackedScene" id=4]
[ext_resource path="res://Characters/PlayerAnimation.gd" type="Script" id=5]
[ext_resource path="res://Assets/Sprites/light.png" type="Texture" id=6]
[ext_resource path="res://Assets/Sounds/oooh.wav" type="AudioStream" id=7]
[ext_resource path="res://Assets/Sounds/swish-9.wav" type="AudioStream" id=8]

[sub_resource type="OccluderPolygon2D" id=27]
polygon = PoolVector2Array( -6, -6, -6, -7, -5, -7, -5, -8, 0, -8, 0, -7, 1, -7, 1, -6, 4, -5, 4, 10, 3, 11, -4, 11, -4, -5 )

[sub_resource type="Shader" id=28]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = .5;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = true;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 28 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 0.5
shader_param/pattern = 0
shader_param/inside = true
shader_param/add_margins = true

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 1 )
region = Rect2( 0, 120, 24, 24 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 1 )
region = Rect2( 24, 120, 24, 24 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 1 )
region = Rect2( 48, 120, 24, 24 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 1 )
region = Rect2( 72, 120, 24, 24 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 1 )
region = Rect2( 0, 24, 24, 24 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 1 )
region = Rect2( 24, 24, 24, 24 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 1 )
region = Rect2( 48, 24, 24, 24 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 1 )
region = Rect2( 72, 24, 24, 24 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 1 )
region = Rect2( 0, 96, 24, 24 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 1 )
region = Rect2( 24, 96, 24, 24 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 1 )
region = Rect2( 48, 96, 24, 24 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 1 )
region = Rect2( 72, 96, 24, 24 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 1 )
region = Rect2( 0, 72, 24, 24 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 1 )
region = Rect2( 24, 72, 24, 24 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 1 )
region = Rect2( 48, 72, 24, 24 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 1 )
region = Rect2( 72, 72, 24, 24 )

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 24, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 48, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 72, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 0, 48, 24, 24 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 24, 48, 24, 24 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 48, 48, 24, 24 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 1 )
region = Rect2( 72, 48, 24, 24 )

[sub_resource type="SpriteFrames" id=25]
animations = [ {
"frames": [ SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ) ],
"loop": false,
"name": "Die",
"speed": 2.0
}, {
"frames": [ SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ) ],
"loop": true,
"name": "Walk",
"speed": 5.0
}, {
"frames": [ SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ) ],
"loop": false,
"name": "Damage",
"speed": 5.0
}, {
"frames": [ SubResource( 17 ), SubResource( 18 ), SubResource( 19 ), SubResource( 20 ) ],
"loop": true,
"name": "Turn",
"speed": 5.0
}, {
"frames": [ SubResource( 1 ), SubResource( 2 ), SubResource( 3 ), SubResource( 4 ) ],
"loop": true,
"name": "Idle",
"speed": 5.0
}, {
"frames": [ SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ) ],
"loop": true,
"name": "Run",
"speed": 5.0
} ]

[sub_resource type="CapsuleShape2D" id=26]
radius = 5.0
height = 8.0

[node name="Player" type="KinematicBody2D" groups=["player"]]
collision_layer = 9
script = ExtResource( 2 )

[node name="Sword" parent="." instance=ExtResource( 4 )]

[node name="LightOccluder2D" type="LightOccluder2D" parent="."]
occluder = SubResource( 27 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = SubResource( 29 )
frames = SubResource( 25 )
animation = "Die"
script = ExtResource( 5 )

[node name="ShardEmitter" parent="AnimatedSprite" instance=ExtResource( 3 )]
visible = false
nbr_of_shards = 10

[node name="Sprite" type="Sprite" parent="AnimatedSprite/ShardEmitter"]
scale = Vector2( 0.1, 0.1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1, 4 )
shape = SubResource( 26 )

[node name="Camera2D" type="Camera2D" parent="."]
anchor_mode = 0
zoom = Vector2( 0.5, 0.5 )

[node name="Pushback" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="Light2D" type="Light2D" parent="."]
position = Vector2( -1, -5 )
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 6 )
color = Color( 1, 1, 1, 0.760784 )
energy = 0.7

[node name="DeathNoise" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 7 )

[node name="Dash" type="Timer" parent="."]
wait_time = 0.1
one_shot = true

[node name="DashSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 8 )

[connection signal="tree_entered" from="." to="." method="_on_Player_tree_entered"]
[connection signal="timeout" from="Pushback" to="." method="_on_Pushback_timeout"]
[connection signal="timeout" from="Dash" to="." method="_on_Dash_timeout"]
